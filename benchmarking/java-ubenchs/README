Java benchmarks.

--------------
# How to run
--------------
You can run the benchmarks with the `run.py` script. The Android environment
must be set up, and the board connected via adb. See `run.py --help` for
details.

For example you can run:
       ./run.py --iterations 5 --mode 64



---------------------------
# How to Write a Benchmark:
---------------------------

Write a java micro-benchmark (one file per benchmark) class, and put it to benchmarks/ folder.
Rules:
1. Test method name start with "time" -- Test launcher will find all timeXXX() methods and run them.
2. Leave iterations as parameter -- Test launcher will fill it with a value to make sure it runs in a reasonable duration.


The micro-benchmark template:

public class MyBenchmark {
       public static void main(String [] args) {
              // No need
       }

//                  +----> test method prefix should be "time..."
//                  |
// ignored <---+    |              +-------> No need to set iterations. Test framework will try to fill a reasonable value automatically.
//             |    |              |
       public int timeTestAdd(int iters) {
              int result = 0;
              for (int i = 0; i < iters; i++) {
                  // test code
              }
              return result;
       }

// If you want to fill iterations by your predefined value. Write a method like below:

//    Don't warm up test <-----+               +---------> Your predefined iterations
//                             |               |
       @IterationsAnnotation(noWarmup=true, iterations=600)
       public long timeSfib(int iters) {
          long sum = 0;
          for (int i = 0; i < iters; i++) {
              sum += sfib(20);
          }
          return sum;
       }
}

// Please refer current tests as examples.

