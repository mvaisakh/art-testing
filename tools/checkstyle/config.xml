<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
"-//Puppy Crawl//DTD Check Configuration 1.3//EN"
"http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!-- Checkstyle configuration. -->

<module name = "Checker">
  <property name="charset" value="UTF-8"/>

  <!-- The wrapper around checkstyle greps for "error" to decide if it should
       return an error code.
  -->
  <property name="severity" value="error"/>

  <!-- Allow check suppression.
         Example:
             // CHECKSTYLE.OFF: LineLength
             // Some very long lines of code...
             // CHECKSTYLE.ON: LineLength
  -->
  <module name="SuppressionCommentFilter">
    <property name="offCommentFormat" value="\s*CHECKSTYLE.OFF\: ([\w\|]+)"/>
    <property name="onCommentFormat" value="\s*CHECKSTYLE.ON\: ([\w\|]+)"/>
    <property name="checkFormat" value="$1"/>
  </module>

  <!-- Checks that we do not use tab characters. -->
  <module name="FileTabCharacter">
    <property name="eachLine" value="true"/>
  </module>

  <module name="TreeWalker">
    <!-- Required for the check suppression. -->
    <module name="FileContentsHolder"/>
    <!-- Check that the outer type name and the filename match. -->
    <module name="OuterTypeFilename"/>
    <module name="Indentation">
      <property name="basicOffset" value="2"/>
      <property name="braceAdjustment" value="0"/>
      <property name="caseIndent" value="2"/>
      <property name="throwsIndent" value="4"/>
      <property name="lineWrappingIndentation" value="4"/>
      <property name="arrayInitIndent" value="2"/>
    </module>
    <module name="LineLength">
      <property name="max" value="100"/>
      <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
    </module>
    <module name="NeedBraces">
      <property name="allowSingleLineStatement" value="true"/>
    </module>
    <module name="LeftCurly">
      <property name="maxLineLength" value="100"/>
    </module>
    <module name="RightCurly">
      <property name="option" value="alone"/>
      <property name="tokens" value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT"/>
    </module>
    <module name="WhitespaceAround">
      <property name="allowEmptyConstructors" value="true"/>
      <property name="allowEmptyMethods" value="true"/>
      <property name="allowEmptyTypes" value="true"/>
      <property name="allowEmptyLoops" value="true"/>
    </module>
    <!-- Order import statements. -->
    <module name="CustomImportOrder">
      <property name="sortImportsInGroupAlphabetically" value="true"/>
      <property name="customImportOrderRules" value="STATIC###SPECIAL_IMPORTS###STANDARD_JAVA_PACKAGE###THIRD_PARTY_PACKAGE"/>
    </module>
    <module name="OneStatementPerLine"/>
    <module name="MultipleVariableDeclarations"/>
    <module name="ArrayTypeStyle">
      <property name="javaStyle" value="true"/>
    </module>
    <module name="MissingSwitchDefault"/>
    <module name="FallThrough"/>
    <!-- Long constants should use 'L'. -->
    <module name="UpperEll"/>
    <!-- Keep a coherent order for modifiers. -->
    <module name="ModifierOrder"/>
    <module name="EmptyLineSeparator">
      <property name="allowNoEmptyLineBetweenFields" value="true"/>
    </module>
    <!-- Commas should be at end-of-lines. -->
    <module name="SeparatorWrap">
      <property name="tokens" value="COMMA"/>
      <property name="option" value="EOL"/>
    </module>
    <module name="MemberName">
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="ParameterName">
      <property name="format" value="^[a-z][a-zA-Z0-9]*(_[0-9]+)?$"/>
    </module>
    <module name="TypeName">
      <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>
    </module>
    <module name="LocalVariableName">
      <property name="tokens" value="VARIABLE_DEF"/>
      <property name="format" value="^[a-z][a-zA-Z0-9]*(_[0-9]+)?$"/>
      <property name="allowOneCharVarInForLoop" value="true"/>
    </module>
    <module name="ClassTypeParameterName">
      <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>
    </module>
    <module name="MethodTypeParameterName">
      <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>
    </module>
    <module name="MethodName">
      <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
      <message key="name.invalidPattern"
        value="Method name ''{0}'' must match pattern ''{1}''."/>
    </module>
    <module name="MethodParamPad"/>
    <module name="AbbreviationAsWordInName">
      <property name="ignoreFinal" value="true"/>
      <property name="allowedAbbreviationLength" value="2"/>
    </module>
    <!-- Check whitespace around generics brackets. -->
    <module name="GenericWhitespace"/>
  </module>
</module>
