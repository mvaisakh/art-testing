/*
 *    Copyright 2015 ARM Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

// Fill benchmark table for index.html.

function resetTable() {
  // Just return if there is no benchmark result.
  // bench_result is defined in bench_result.js which was generated by profile.sh.
  if (bench_result.length == 0) {
    return;
  }

  var num_of_hotspots = bench_result[0].hotspots.length;
  var threshold = document.getElementById("threshold").value;
  var show_native = document.getElementById("showNative").value == 1;
  var show_java = document.getElementById("showJava").value == 1;

  var html = "";
  document.getElementById("benchs").innerHTML = "";
  for (var i = 0; i < bench_result.length; i++) {
    var br = bench_result[i];
    html += "<tr>";
    html += '<td class="benchmarkTableData">' + br.name + "</td>";
    var file_prefix = "../perf-out/" + br.name + "/";
    html += '<td class="benchmarkTableData"><a href="flamegraph.html?data='
          + file_prefix + br.flame_graph + '&title=' + br.name
          + '" title="' + br.flame_graph + '">view</a></td>';
    html += '<td class="benchmarkTableData"><a href="report.html?data='
          + file_prefix + br.report + '&title=' + br.name + '&bench_index=' + i + '&num_of_hotspots=' + num_of_hotspots
          + '" title="' + br.report + '">view</a>';
    html += '<td class="benchmarkTableData"><a href="log.html?data='
          + file_prefix + br.log + '&title=' + br.name
          + '" title="' + br.log + '">view</a>';
    for (var j = 0; j < num_of_hotspots; j++) {
      var hotspot_name = br.hotspots[j].name;
      var is_java_symbol = hotspot_name.match(/.+ .+\..+\(.*\)/) != null;
      var max_name_length = 22;
      var short_name = hotspot_name.length > max_name_length ? hotspot_name.substr(0, max_name_length - 3) + "..." : hotspot_name;
      var cycles_rate = br.hotspots[j].events[0].rate;
      var significant_events = 0;
      for (var k = 0; k < br.hotspots[j].events.length; k++) {
        if (br.hotspots[j].events[k].rate > Math.pow(cycles_rate/100, 1/threshold) * 100) {
          significant_events++;
        }
      }
      html += '<td class="benchmarkTableData">'
      if ((is_java_symbol && show_java) || (!is_java_symbol && show_native)) {
        html += significant_events > 0 ? '<font color="red"><b>' + significant_events + ' </b></font>'  : "";
        html += '<font color="orange">' + cycles_rate + "% " + '</font>';
        html += '<a href="hotspot.html?bench_index=' + i + '&hotspot_index=' + j + '&threshold=' + threshold + '" title="' + hotspot_name + '">' + short_name + '</a>';
      }
      html += "</td>";
    }
    html += "</tr>";
  }
  document.getElementById("benchs").innerHTML = html;
}

function setToggleButtons() {
  var show_native = document.getElementById("showNative").value == 1;
  var show_java = document.getElementById("showJava").value == 1;
  document.getElementById("toggleNative").innerHTML = show_native ? "Hide Native" : "Show Native";
  document.getElementById("toggleJava").innerHTML = show_java ? "Hide Java" : "Show Java";
}

function toggleNative() {
  document.getElementById("showNative").value = 1 - document.getElementById("showNative").value;
  setToggleButtons();
  resetTable();
}

function toggleJava() {
  document.getElementById("showJava").value = 1 - document.getElementById("showJava").value;
  setToggleButtons();
  resetTable();
}

function init() {
  // Just return if there is no benchmark result.
  if (bench_result.length == 0) {
    return;
  }
  // Setup table header.
  var num_of_hotspots = bench_result[0].hotspots.length;
  document.getElementById("annotation_head").colSpan = num_of_hotspots;
  var head2 = document.getElementById("head2");
  for (var i = 1; i <= num_of_hotspots; i++) {
    head2.innerHTML += '<th class="benchmarkTableHead2">Hotspot ' + i + '</th>'
  }
  // Setup buttons.
  setToggleButtons();
  // Setup table content.
  resetTable();
}
